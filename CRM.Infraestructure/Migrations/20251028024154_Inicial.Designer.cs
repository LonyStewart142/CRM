// <auto-generated />
using System;
using CRM.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028024154_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Pérez",
                            Direccion = "Calle 1",
                            Nombre = "Juan",
                            Telefono = "8095550001"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "López",
                            Direccion = "Calle 2",
                            Nombre = "María",
                            Telefono = "8095550002"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Gómez",
                            Direccion = "Calle 3",
                            Nombre = "Carlos",
                            Telefono = "8095550003"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Torres",
                            Direccion = "Calle 4",
                            Nombre = "Ana",
                            Telefono = "8095550004"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Ramírez",
                            Direccion = "Calle 5",
                            Nombre = "Luis",
                            Telefono = "8095550005"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Martínez",
                            Direccion = "Calle 6",
                            Nombre = "Laura",
                            Telefono = "8095550006"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Fernández",
                            Direccion = "Calle 7",
                            Nombre = "Pedro",
                            Telefono = "8095550007"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Jiménez",
                            Direccion = "Calle 8",
                            Nombre = "Sofía",
                            Telefono = "8095550008"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Mendoza",
                            Direccion = "Calle 9",
                            Nombre = "Javier",
                            Telefono = "8095550009"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Reyes",
                            Direccion = "Calle 10",
                            Nombre = "Camila",
                            Telefono = "8095550010"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "Morales",
                            Direccion = "Calle 11",
                            Nombre = "Andrés",
                            Telefono = "8095550011"
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "Castro",
                            Direccion = "Calle 12",
                            Nombre = "Paola",
                            Telefono = "8095550012"
                        },
                        new
                        {
                            Id = 13,
                            Apellido = "Silva",
                            Direccion = "Calle 13",
                            Nombre = "Fernando",
                            Telefono = "8095550013"
                        },
                        new
                        {
                            Id = 14,
                            Apellido = "Rojas",
                            Direccion = "Calle 14",
                            Nombre = "Gabriela",
                            Telefono = "8095550014"
                        },
                        new
                        {
                            Id = 15,
                            Apellido = "Herrera",
                            Direccion = "Calle 15",
                            Nombre = "Ricardo",
                            Telefono = "8095550015"
                        },
                        new
                        {
                            Id = 16,
                            Apellido = "Cruz",
                            Direccion = "Calle 16",
                            Nombre = "Daniela",
                            Telefono = "8095550016"
                        },
                        new
                        {
                            Id = 17,
                            Apellido = "Vargas",
                            Direccion = "Calle 17",
                            Nombre = "Oscar",
                            Telefono = "8095550017"
                        },
                        new
                        {
                            Id = 18,
                            Apellido = "Navarro",
                            Direccion = "Calle 18",
                            Nombre = "Elena",
                            Telefono = "8095550018"
                        },
                        new
                        {
                            Id = 19,
                            Apellido = "Santos",
                            Direccion = "Calle 19",
                            Nombre = "Martín",
                            Telefono = "8095550019"
                        },
                        new
                        {
                            Id = 20,
                            Apellido = "Peña",
                            Direccion = "Calle 20",
                            Nombre = "Lucía",
                            Telefono = "8095550020"
                        });
                });

            modelBuilder.Entity("CRM.Domain.Entities.Ejecutivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Ejecutivos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Rodríguez",
                            Nombre = "Carlos"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "García",
                            Nombre = "Marta"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Hernández",
                            Nombre = "José"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Vega",
                            Nombre = "Laura"
                        });
                });

            modelBuilder.Entity("CRM.Domain.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaVenta = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 1,
                            Monto = 25000m,
                            Producto = "Tarjeta de Crédito"
                        },
                        new
                        {
                            Id = 2,
                            FechaVenta = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 2,
                            Monto = 120000m,
                            Producto = "Préstamo Personal"
                        },
                        new
                        {
                            Id = 3,
                            FechaVenta = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 3,
                            Monto = 1500m,
                            Producto = "Tarjeta de Débito"
                        },
                        new
                        {
                            Id = 4,
                            FechaVenta = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 4,
                            Monto = 3500000m,
                            Producto = "Préstamo Hipotecario"
                        },
                        new
                        {
                            Id = 5,
                            FechaVenta = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 5,
                            Monto = 20000m,
                            Producto = "Tarjeta de Crédito"
                        },
                        new
                        {
                            Id = 6,
                            FechaVenta = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 6,
                            Monto = 750000m,
                            Producto = "Préstamo Vehicular"
                        },
                        new
                        {
                            Id = 7,
                            FechaVenta = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 7,
                            Monto = 95000m,
                            Producto = "Préstamo Personal"
                        },
                        new
                        {
                            Id = 8,
                            FechaVenta = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 8,
                            Monto = 500m,
                            Producto = "Cuenta de Ahorro"
                        },
                        new
                        {
                            Id = 9,
                            FechaVenta = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 9,
                            Monto = 1200m,
                            Producto = "Tarjeta de Débito"
                        },
                        new
                        {
                            Id = 10,
                            FechaVenta = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 10,
                            Monto = 1800000m,
                            Producto = "Préstamo Comercial"
                        },
                        new
                        {
                            Id = 11,
                            FechaVenta = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 11,
                            Monto = 30000m,
                            Producto = "Tarjeta de Crédito"
                        },
                        new
                        {
                            Id = 12,
                            FechaVenta = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 12,
                            Monto = 15000m,
                            Producto = "Seguro de Vida"
                        });
                });

            modelBuilder.Entity("CRM.Domain.Entities.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaVisita")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEjecutivo")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEjecutivo");

                    b.ToTable("Visitas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaVisita = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 1,
                            IdEjecutivo = 1,
                            Resultado = "Interesado en tarjeta de crédito"
                        },
                        new
                        {
                            Id = 2,
                            FechaVisita = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 2,
                            IdEjecutivo = 1,
                            Resultado = "Solicitó préstamo personal"
                        },
                        new
                        {
                            Id = 3,
                            FechaVisita = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 3,
                            IdEjecutivo = 1,
                            Resultado = "Interesado en tarjeta de débito"
                        },
                        new
                        {
                            Id = 4,
                            FechaVisita = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 4,
                            IdEjecutivo = 2,
                            Resultado = "Cotización de préstamo hipotecario"
                        },
                        new
                        {
                            Id = 5,
                            FechaVisita = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 5,
                            IdEjecutivo = 2,
                            Resultado = "Interesado en tarjeta de crédito"
                        },
                        new
                        {
                            Id = 6,
                            FechaVisita = new DateTime(2025, 10, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 6,
                            IdEjecutivo = 3,
                            Resultado = "Compra de vehículo"
                        },
                        new
                        {
                            Id = 7,
                            FechaVisita = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 7,
                            IdEjecutivo = 3,
                            Resultado = "Solicitó préstamo personal"
                        },
                        new
                        {
                            Id = 8,
                            FechaVisita = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 8,
                            IdEjecutivo = 3,
                            Resultado = "Interesado en cuenta de ahorro"
                        },
                        new
                        {
                            Id = 9,
                            FechaVisita = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 9,
                            IdEjecutivo = 3,
                            Resultado = "Aprobado para tarjeta de débito"
                        },
                        new
                        {
                            Id = 10,
                            FechaVisita = new DateTime(2025, 10, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 10,
                            IdEjecutivo = 4,
                            Resultado = "Interesado en préstamo comercial"
                        },
                        new
                        {
                            Id = 11,
                            FechaVisita = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 11,
                            IdEjecutivo = 4,
                            Resultado = "Solicitó tarjeta de crédito"
                        },
                        new
                        {
                            Id = 12,
                            FechaVisita = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCliente = 12,
                            IdEjecutivo = 4,
                            Resultado = "Cotización de seguro de vida"
                        });
                });

            modelBuilder.Entity("CRM.Domain.Entities.Venta", b =>
                {
                    b.HasOne("CRM.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRM.Domain.Entities.Visita", b =>
                {
                    b.HasOne("CRM.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Visitas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRM.Domain.Entities.Ejecutivo", "Ejecutivo")
                        .WithMany("Visitas")
                        .HasForeignKey("IdEjecutivo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Ejecutivo");
                });

            modelBuilder.Entity("CRM.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Ventas");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("CRM.Domain.Entities.Ejecutivo", b =>
                {
                    b.Navigation("Visitas");
                });
#pragma warning restore 612, 618
        }
    }
}
